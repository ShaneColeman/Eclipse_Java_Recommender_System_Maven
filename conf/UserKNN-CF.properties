# Data Directory
dfs.data.dir=data

# Result Directory
dfs.result.dir=result

# Log Directory
dfs.log.dir=log

# Data Input Path (Text)
# Testing
# data.input.path=filmtrust
# data.input.path=filmtrust/rating
# data.input.path=movielens/ratings.txt
# data.input.path=movielens/ratings.csv
# data.input.path=movielens/movieLensDataDFNorm.csv
# data.input.path=movielens/movieLensRatings1M.csv

# Data Input Path (NVD & EDB)
# NVD & EDB - CVSS Score
# data.input.path=nvd/csv/nvdEDBPlatAffSoftCVSSScorePubDateInt.csv 
# data.input.path=nvd/csv/nvdEDBAffSoftPlatCVSSScorePubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVSSScorePubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftEditVerVenCVSSScorePubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVEIDCVSSScorePubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerTypeCVSSScorePubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerPlatCVSSScorePubDateInt.csv
# NVD & EDB - CVSS Severity
# data.input.path=nvd/csv/nvdEDBPlatAffSoftCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftPlatCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftEditVerVenCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVEIDCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerTypeCVSSSeverityPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerPlatCVSSSeverityPubDateInt.csv
# NVD & EDB - CVSS Severity (High Relevance)
# data.input.path=nvd/csv/nvdEDBPlatAffSoftCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftPlatCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftEditVerVenCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVEIDCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerTypeCVSSSeverityHighPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerPlatCVSSSeverityHighPubDateInt.csv
# NVD & EDB - CVSS Severity (High / Medium Relevance)
# data.input.path=nvd/csv/nvdEDBPlatAffSoftCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftPlatCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBAffSoftEditVerVenCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerCVEIDCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerTypeCVSSSeverityHighMediumPubDateInt.csv
# data.input.path=nvd/csv/nvdEDBVenAffSoftEditVerPlatCVSSSeverityHighMediumPubDateInt.csv
# NVD, CVE Details 2005 Onwards - Specified Vendors
data.input.path=nvd/csv/affSoftCWEIDNACVSSScorePubDateIntNvdCVEDF2005Onward.csv
# data.input.path=nvd/csv/trainAffSoftCWEIDNACVSSScorePubDateIntNvdCVEDF2005Onward.csv
# data.input.path=nvd/csv/cweIDNAAffSoftCVSSScorePubDateIntNvdCVEDF2005Onward.csv
# data.input.path=nvd/csv/affSoftVulTypesNACVSSScorePubDateIntNvdCVEDF2005Onward.csv
# data.input.path=nvd/csv/vulTypesNAAffSoftCVSSScorePubDateIntNvdCVEDF2005Onward.csv
# NVD, CVE Details, EDB 2005 Onwards - Specified Vendors
# data.input.path=nvd/csv/affSoftPlatCVSSScorePubDateIntNvdCVEEDBDF2005Onward.csv
# data.input.path=nvd/csv/platAffSoftCVSSScorePubDateIntNvdCVEEDBDF2005Onward.csv
# data.input.path=nvd/csv/venAffSoftEditVerPlatCVSSScorePubDateIntNvdCVEEDBDF2005Onward.csv

# Data Input Path (arff)
# data.input.path=arfftest/data.arff

# Data Model Convertor (text)
data.model.format=text
# data.column.format=UIR
data.column.format=UIRT
# binarize threshold mainly used in ranking
# -1.0 - maxRate, binarize rate into -1.0 and 1.0
# binThold = -1.0, do nothing
# binThold = value, rating > value is changed to 1.0 other is 0.0, mainly used in ranking
# for PGM 0.0 maybe a better choose
data.convert.binarize.threshold=-1.0

# Data Model Convertor (arff) 
# data.model.format=arff

# Data Model Splitter (ratio)
# Options: rating, user, userfixed, item, valid, ratingdate, userdate, itemdate
# data.model.splitter=ratio
# data.spliter.ratio=rating
# data.splitter.trainset.ratio=0.7

# Data Model Splitter (loocv)
data.model.splitter=loocv
data.splitter.loocv=user
# [Optional]
data.splitter.cv.number=5

# Data Model Splitter (givenN)
# data.model.splitter=givenn
# data.splitter.givenn=user
# data.splitter.givenn.n=10

# Data Model Splitter (kcv)
# data.model.splitter=kcv
# data.splitter.cv.number=10

# Evaluator (rating)
# rec.recommender.isranking=false
# rec.eval.enable=true
# rec.eval.classes=mae
# rec.eval.classes=mpe
# rec.eval.classes=mse
# rec.eval.classes=rmse

# Evaluator (ranking)
rec.recommender.isranking=true
rec.eval.enable=true
rec.recommender.ranking.topn=10
# rec.eval.classes=auc
# rec.eval.classes=ap
# rec.eval.classes=arhr
# rec.eval.classes=diversity
# rec.eval.classes=hitrate
# rec.eval.classes=idcg
# rec.eval.classes=ndcg
# rec.eval.classes=precision
# rec.eval.classes=recall
# rec.eval.classes=rr
# rec.eval.classes=auc,precision,recall
# rec.eval.classes=auc,ap,arhr,diversity,idcg,ndcg,precision,recall,rr
rec.eval.classes=auc,ap,arhr,diversity,idcg,ndcg,precision,recall,rr,hitrate

# Set the random seed for reproducing the results (split data, init parameters and other methods using random)
# Default is set 1l
# If do not set ,just use System.currentTimeMillis() as the seed and could not reproduce the results.
rec.random.seed=2018

# Algorithm status can be printed out for part of the algorithms in each iteration. 
# The corresponding configuration is 'rec.recommender.verbose'. 
# The example is shown as follows.
rec.recommender.verbose=true

# User KNN Recommender
rec.recommender.class=userknn
rec.recommender.similarities=user
# rec.similarity.class=bcos
# rec.similarity.class=cos
# rec.similarity.class=cpc
# rec.similarity.class=msesim
# rec.similarity.class=msd
rec.similarity.class=pcc
# rec.similarity.class=krcc
# rec.similarity.class=dice
# rec.similarity.class=jaccard
# rec.similarity.class=exjaccard
rec.neighbors.knn.number=50
rec.similarity.shrinkage=-1
rec.filter.class=generic